name: Build and Push to Harbor

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:
  
jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.output.changed }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v4
        with: 
          filters: |
            api: "api-gateway/**"
            # auth: "auth-service/**"
            contact: "contact-service/**"
    
  build: 
    needs: detect
    if: needs.detect.outputs.changed != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: api-gateway
            context: .
            dockerfile: ./api-gateway/Dockerfile
          - service: contact-service
            context: ./contact-service
            dockerfile: ./contact-service/Dockerfile
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.HARBOR_REGISTRY }}/${{ secrets.HARBOR_PROJECT }}/${{ matrix.service }}
          tags: |
            type=sha,format=short,prefix=sha-
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
         

